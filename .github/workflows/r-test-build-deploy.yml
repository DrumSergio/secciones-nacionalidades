name: Test and Deployment to K3s cluster

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: 	ubuntu-18.04
    strategy:
      matrix:
        r-version: [4.0]

    steps:
      - uses: actions/checkout@v2
        
      - name: Install dependencies
        run: |
          install.packages(c('shiny', 'shinydashboard', 'shinyjs', 'rgdal', 'raster', 'sp', 'pxR', 'leaflet', 'plotKML', 'highcharter', 'shinytest', 'testthat', 'rjson'))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
      - name: Test WebApp
        run: tests/test-shiny.R
        shell: Rscript {0}
     
      - name: Set up Docker Buildx      
        uses: crazy-max/ghaction-docker-buildx@v1      
        with:        
          version: latest 
      
      - name: Prepare amd64
        if: success()      
        id: prepare_amd64      
        run: |        
          echo ::set-output name=docker_platform::linux/arm/v7       
          echo ::set-output name=docker_image::drumsergio/secciones-nacionalidades   
          echo ::set-output name=version::latest-amd64          
      
      - name: Prepare armv7     
        if: success()      
        id: prepare_armv7      
        run: |        
          echo ::set-output name=docker_platform::linux/arm/v7       
          echo ::set-output name=docker_image::drumsergio/secciones-nacionalidades   
          echo ::set-output name=version::latest-armv7
     
      - name: Docker Login      
        if: success()      
        run: |        
         echo ${{ secrets.dockerhub_password }} | docker login --username ${{ secrets.dockerhub_username }} \
         --password-stdin     

      - name: Run Buildx (amd64, push image)     
        if: success()      
        run: |        
          docker buildx build --platform ${{ steps.prepare_amd64.outputs.docker_platform }} \
          --tag ${{ steps.prepare_amd64.outputs.docker_image }}:${{ steps.prepare_amd64.outputs.version }} \
          --file ./Dockerfile --output type=image,push=true .
           
      - name: Run Buildx (armv7, push image)      
        if: success()      
        run: |        
          docker buildx build --platform ${{ steps.prepare_armv7.outputs.docker_platform }} \
          --tag ${{ steps.prepare_armv7.outputs.docker_image }}:${{ steps.prepare_armv7.outputs.version }} \
          --file ./Dockerfile-armv7l --output type=image,push=true .
          
      - name: Deploy to Kubernetes
        uses: steebchen/kubectl@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.kubeconfig_data }}
          KUBECTL_VERSION: "1.18"
        with:
          args: set image --record deployment/sec-nac-auto \
                secciones-nacionalidades=drumsergio/secciones-nacionalidades:latest-armv7 -n sec-nac-auto

          


