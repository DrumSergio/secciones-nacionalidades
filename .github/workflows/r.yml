name: Test and Deployment to K3s cluster

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: 	ubuntu-18.04
#    strategy:
#      matrix:
#        r-version: [3.6]

    steps:
      - uses: actions/checkout@v2
        
#      - name: Install dependencies
#        run: |
#          install.packages(c("remotes", "rcmdcheck"))
#          remotes::install_deps(dependencies = TRUE)
#        shell: Rscript {0}
#      - name: Test WebApp
#        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
#        shell: Rscript {0}
     
      - name: Set up Docker Buildx      
        uses: crazy-max/ghaction-docker-buildx@v1      
        with:        
          version: latest 
          
      - name: Prepare      
        if: success()      
        id: prepare      
        run: |        
          echo ::set-output name=docker_platform::linux/arm/v7       
          echo ::set-output name=docker_image::drumsergio/secciones-nacionalidades   
          echo ::set-output name=version::${GITHUB_RUN_NUMBER}
     
      - name: Docker Login      
        if: success()      
        run: |        
         echo ${{ secrets.dockerhub_password }} | docker login --username ${{ secrets.dockerhub_username }} --password-stdin     

      - name: Run Buildx (push image)      
        if: success()      
        run: |        
          docker buildx build --platform ${{ steps.prepare.outputs.docker_platform }} \
          --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} \
          --file ./Dockerfile-armv7l --output type=image,push=true .

#      - name: Build and Push Container 
#        id: test
#        uses: ryanjfrizzell/action-bpd@master
#        with:
#          docker_username: ${{ secrets.dockerhub_username }}
#          docker_password: ${{ secrets.dockerhub_password }}
#          docker_image_tag: ${GITHUB_RUN_NUMBER}
#          docker_registry: 'drumsergio/secciones-nacionalidades'
#          dockerhub: 'true'
#          dockerfile: 'Dockerfile-armv7l'
#      - name: Get the output
#        run: |
#          echo "imageinfo was ${{ steps.test.outputs.imageinfo }}"
          
      - name: Deploy to Kubernetes
        uses: steebchen/kubectl@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.kubeconfig_data }}
          KUBECTL_VERSION: "1.18"
        with:
          args: set image --record deployment/sec-nac-auto secciones-nacionalidades=${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} -n sec-nac-auto

          


